---
import Section from "../Section.astro"
import { work } from "@cv"

import HTML from "@/icons/html.astro"
import CSS from "@/icons/css.astro"
import JavaScript from "@/icons/javascript.astro"
import TypeScript from "@/icons/type.astro"
import React from "@/icons/react.astro"
import Node from "@/icons/node.astro"
import MySQL from "@/icons/sql.astro"
import Git from "@/icons/git.astro"
import GitHub from "@/icons/GitHub.astro"
import Tailwind from "@/icons/tailwind.astro"
import Next from "@/icons/next.astro"
import Swift from "@/icons/swift.astro"
import SwiftUI from "@/icons/swiftui.astro"
import Kotlin from "@/icons/kotlin.astro"
import Flutter from "@/icons/flutter.astro"
import Arrow from "@/icons/Arrow.astro"

const SKILLS_ICONS: Record<string, any> = {
  HTML,
  CSS,
  JavaScript,
  TypeScript,
  React,
  Node,
  MySQL,
  Git,
  GitHub,
  Next,
  Tailwind,
  Swift,
  SwiftUI,
  Kotlin,
  Flutter,
}
---
<Section className={Astro.props.className} title="Professional Experience">
  <ul class="flex flex-col">
    {work.map(({ name, startDate, endDate, position, summary, responsibilities, url, skills, location, location_type }) => {
      const startDateFormatted = new Date(startDate).toLocaleDateString('en-US', { month: 'short', year: 'numeric' });
      const endDateFormatted = endDate ? new Date(endDate).toLocaleDateString('en-US', { month: 'short', year: 'numeric' }) : "Present";

      return (
        <li class="relative print:py-2">
          <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100 ">
            <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
              <time datetime={startDate} data-title={startDate}>{startDateFormatted}</time> - <time datetime={endDate} data-title={endDate}>{endDateFormatted}</time>
            </header>
            <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
            <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
              <h3 class="mr-6 items-baseline gap-x-2 gap-y-0.5 font-medium">
                {url ? (
                  <a target="_blank" class="hover:text-skin-hue group flex items-center gap-[6px] decoration-dotted underline-offset-[5px] hover:underline" href={url} title={`Ver ${name}`}>
                    <span>{position} <span>@</span> {name}</span>
                    <span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
                      <Arrow />
                    </span>
                  </a>
                ) : (
                  <span class="group flex items-center gap-[6px] text-skin-base">
                    <span>{position} <span>@</span> {name}</span>
                  </span>
                )}
              </h3>
              {(location || location_type) && (
                <div class="text-sm text-skin-muted">
                  {location} {location && location_type && '-'} {location_type}
                </div>
              )}
              <div class="flex flex-col gap-1">
                {summary && (
                  <div class="flex flex-col gap-1">
                    <h4>Summary:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {Array.isArray(summary) ? (
                        summary.map(item => (
                          {item}
                        ))
                      ) : (
                        <li>{summary}</li>
                      )}
                    </ul>
                  </div>
                )}

                {(responsibilities) &&  (
                <div class="flex flex-col gap-1">
                {responsibilities && (
                  <div class="flex flex-col gap-1">
                    <h4>Responsibilities:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {(responsibilities ?? [] as string[]).map((responsibility: string) => (
                        <li>{responsibility}</li>
                      ))}
                    </ul>
                  </div>
                )}
                </div>
                
                <ul class="flex print:hidden flex-wrap gap-2" aria-label="Technologies used">
                  {skills && skills.map(skill => {
                    const iconName = skill === "Next.js" ? "Next" : skill
                    const Icon = SKILLS_ICONS[iconName]
                    return (
                      <li class="bg-skin-button-accent/20 border-skin-hue/20 text-skin-hue print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs">
                        {Icon && <Icon />} <span>{skill}</span>
                      </li>
                    )
                  })}
                </ul>
)}
              </div>
            </div>
        </div>
        </li>
      )
    })}
  </ul>  
</Section>
<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<style>
  li::marker {
    @apply text-skin-hue
  }
</style>